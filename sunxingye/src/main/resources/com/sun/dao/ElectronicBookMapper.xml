<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sun.dao.ElectronicBookMapper">
  <resultMap id="BaseResultMap" type="com.sun.pojo.ElectronicBook">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_primary" jdbcType="VARCHAR" property="bookPrimary" />
    <result column="book_uploader" jdbcType="VARCHAR" property="bookUploader" />
    <result column="upload_time" jdbcType="DATE" property="uploadTime" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="group_name" property="groupName"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, book_name, book_primary, book_uploader, upload_time, group_id
  </sql>
  <select id="selectByExample" parameterType="com.sun.pojo.ElectronicBookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from electronic_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from electronic_book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from electronic_book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sun.pojo.ElectronicBookExample">
    delete from electronic_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sun.pojo.ElectronicBook">
    insert into electronic_book (book_id, book_name, book_primary, 
      book_uploader, upload_time, group_id
      )
    values (#{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{bookPrimary,jdbcType=VARCHAR}, 
      #{bookUploader,jdbcType=VARCHAR}, #{uploadTime,jdbcType=DATE}, #{groupId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sun.pojo.ElectronicBook">
    insert into electronic_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookPrimary != null">
        book_primary,
      </if>
      <if test="bookUploader != null">
        book_uploader,
      </if>
      <if test="uploadTime != null">
        upload_time,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookPrimary != null">
        #{bookPrimary,jdbcType=VARCHAR},
      </if>
      <if test="bookUploader != null">
        #{bookUploader,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        #{uploadTime,jdbcType=DATE},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sun.pojo.ElectronicBookExample" resultType="java.lang.Long">
    select count(*) from electronic_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update electronic_book
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookPrimary != null">
        book_primary = #{record.bookPrimary,jdbcType=VARCHAR},
      </if>
      <if test="record.bookUploader != null">
        book_uploader = #{record.bookUploader,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadTime != null">
        upload_time = #{record.uploadTime,jdbcType=DATE},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update electronic_book
    set book_id = #{record.bookId,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_primary = #{record.bookPrimary,jdbcType=VARCHAR},
      book_uploader = #{record.bookUploader,jdbcType=VARCHAR},
      upload_time = #{record.uploadTime,jdbcType=DATE},
      group_id = #{record.groupId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sun.pojo.ElectronicBook">
    update electronic_book
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookPrimary != null">
        book_primary = #{bookPrimary,jdbcType=VARCHAR},
      </if>
      <if test="bookUploader != null">
        book_uploader = #{bookUploader,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        upload_time = #{uploadTime,jdbcType=DATE},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sun.pojo.ElectronicBook">
    update electronic_book
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_primary = #{bookPrimary,jdbcType=VARCHAR},
      book_uploader = #{bookUploader,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=DATE},
      group_id = #{groupId,jdbcType=INTEGER}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <select id="findBookGroup" resultMap="BaseResultMap">
    select e.book_id, e.book_name, e.book_primary, e.book_uploader, e.upload_time, g.group_name from electronic_book e
    inner join book_group g
    on e.group_id=g.group_id
  </select>

  <delete id="deleteMoreBook" parameterType="java.util.List">
    delete from electronic_book
    where book_id in
    <foreach item="item" collection="list" open="(" close=")" separator=",">
    #{item}
    </foreach>
  </delete>
</mapper>